- style: clay
  title: Function Oriented JavaScript

- text: f(x) = ?, g(x) = ?
  notes: |
    Exercise with two people. One person is f(x) = 2x + 1 another is g(x) = 2x + y where y 
    is the last result from f(x). The audience's job is to guess the implementations by poking at the
    functions with inputs. The functions each take turns answering. The audience shouts "2!" and then
    f replies "5". The audience says "3?" and g replies "11!" (2*3 + 5). The goal is to demonstrate that
    side effects are hard.

- style: mold
  heading: Referential Transparency
  notes: Let's talk about the concept and then React...

- style: slate
  heading: Higher-order Functions
  code:
    - (Assign functions to variables)
    - higher-order1.js

- style: mold
  heading: Higher-order Functions
  code:
    - (Return functions from functions)
    - higher-order2.js

- style: slate
  heading: Higher-order Functions
  code:
    - (Pass functions to functions)
    - higher-order3.js

- style: mold
  heading: Functions in your Functions
  code:
    - (<strong>Don't</strong> do this...)
    - unnecessary1.js
    - (<strong>Do</strong> this...)
    - unnecessary2.js

- style: slate
  code: [(Haskell), fib.hs, (JavaScript), fib.js]

- style: clay
  text: <q>Memoization is a simple optimizationâ€¦ Caching is like a deal with the devil.</q> <strong>Douglas Crockford</strong>
  code: memo.js

- style: slate
  title: List Processing
  code: 
    - (In Racket...)
    - list-processing.rkt
  notes: Racket is a Lisp

- style: purple
  title: List Processing
  text: [practical example of list processing with underscoreJS (grab some json, select a subset, and pluck out a value then reduce)]
  notes: Example should include robots.

- style: clay
  text: simple function composition (no curry)

- text: [currying, partial application with something like ajax get/post]

- text: scoreunder for correct order. functions first! show bind example using both map and curry

- style: purple
  heading: Immutability
  notes: This is kind of mind blowing to someone used to iterating with i++

- heading: Recursion
  notes: Example with head | tail summing

- heading: Learn More!
  bullets:
    - Haskell
    - Clojure (Lisp)
    - Erlang/Elixir